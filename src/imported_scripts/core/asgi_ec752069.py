"""ASGI (Asynchronous Server Gateway Interface) configuration for Django.

This module sets up the ASGI application for Django, which is used for:
- WebSocket connections
- Asynchronous HTTP requests
- Long-polling connections
- Other asynchronous protocols

The ASGI application serves as the entry point for the application server
and handles the interface between the web server and Django.

Key Features:
- Sets up the default Django settings module
- Creates the ASGI application instance
- Configures environment variables for deployment
- Provides the application entry point for ASGI servers

Usage:
    This file is typically referenced by ASGI servers like:
    - Daphne
    - Uvicorn
    - Hypercorn

Configuration:
    The settings module is configured through the DJANGO_SETTINGS_MODULE
    environment variable, which defaults to 'core.settings'.

Note:
----
    This file is automatically generated by Django when creating a new project.
    It should be modified with caution as it affects the application's ability
    to handle asynchronous requests.

"""

import os

from django.core.asgi import get_asgi_application

# Set default Django settings module for the ASGI application
# This tells Django which settings file to use when initializing the application
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "core.settings")

# Create the ASGI application instance
# This is the main entry point for the ASGI server
application = get_asgi_application()
