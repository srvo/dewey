# Generated by Django 5.1.5 on 2025-01-17 05:09

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=100)),
                ("last_name", models.CharField(blank=True, max_length=100)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("interaction_count", models.IntegerField(default=0)),
                ("last_interaction", models.DateTimeField(blank=True, null=True)),
                ("contact_metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Contact",
                "verbose_name_plural": "Contacts",
                "ordering": ["last_name", "first_name"],
            },
        ),
        migrations.CreateModel(
            name="Email",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("gmail_id", models.CharField(max_length=255, unique=True)),
                ("thread_id", models.CharField(blank=True, max_length=255, null=True)),
                ("history_id", models.CharField(blank=True, max_length=255, null=True)),
                ("subject", models.TextField(blank=True, null=True)),
                ("from_email", models.TextField()),
                ("to_emails", models.JSONField(default=list)),
                ("raw_content", models.TextField(blank=True, null=True)),
                ("received_at", models.DateTimeField()),
                ("email_metadata", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_sync_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Email",
                "verbose_name_plural": "Emails",
                "indexes": [
                    models.Index(fields=["gmail_id"], name="email_gmail_idx"),
                    models.Index(fields=["thread_id"], name="email_thread_idx"),
                    models.Index(fields=["history_id"], name="email_history_idx"),
                    models.Index(fields=["received_at"], name="email_received_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="RawEmail",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("gmail_message_id", models.CharField(max_length=255, unique=True)),
                ("thread_id", models.CharField(max_length=255)),
                ("history_id", models.CharField(max_length=255)),
                ("raw_data", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Raw Email",
                "verbose_name_plural": "Raw Emails",
                "indexes": [
                    models.Index(
                        fields=["gmail_message_id"],
                        name="raw_email_gmail_idx",
                    ),
                    models.Index(fields=["thread_id"], name="raw_email_thread_idx"),
                    models.Index(fields=["history_id"], name="raw_email_history_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="EmailContactAssociation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "association_type",
                    models.CharField(
                        choices=[
                            ("from", "From"),
                            ("to", "To"),
                            ("cc", "CC"),
                            ("bcc", "BCC"),
                        ],
                        default="to",
                        max_length=4,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "contact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="email_associations",
                        to="database.contact",
                    ),
                ),
                (
                    "email",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contact_associations",
                        to="database.email",
                    ),
                ),
            ],
            options={
                "verbose_name": "Email Contact Association",
                "verbose_name_plural": "Email Contact Associations",
                "indexes": [
                    models.Index(
                        fields=["email", "contact", "association_type"],
                        name="email_contact_assoc_idx",
                    ),
                    models.Index(
                        fields=["contact", "association_type"],
                        name="contact_assoc_type_idx",
                    ),
                ],
                "unique_together": {("email", "contact", "association_type")},
            },
        ),
        migrations.CreateModel(
            name="EventLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("event_type", models.CharField(max_length=50)),
                ("details", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "email",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="database.email",
                    ),
                ),
            ],
            options={
                "verbose_name": "Event Log",
                "verbose_name_plural": "Event Logs",
                "indexes": [
                    models.Index(fields=["event_type"], name="event_type_idx"),
                    models.Index(fields=["created_at"], name="event_created_idx"),
                ],
            },
        ),
    ]
