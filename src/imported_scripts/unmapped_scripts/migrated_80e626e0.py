# Generated by Django 5.1.5 on 2025-01-17 22:04

from typing import Any

from django.db import migrations, models
from django.db.models import Index


def create_contact_model() -> models.Model:
    """Creates the Contact model."""

    class Contact(models.Model):
        """Represents a contact with email and enrichment status."""

        id = models.CharField(max_length=26, primary_key=True, serialize=False)
        email = models.EmailField(max_length=254, unique=True)
        name = models.CharField(max_length=255, blank=True, null=True)
        category = models.CharField(max_length=50, default="individual")
        enrichment_status = models.CharField(
            max_length=20,
            choices=[
                ("pending", "Pending"),
                ("in_progress", "In Progress"),
                ("completed", "Completed"),
                ("failed", "Failed"),
            ],
            default="pending",
        )
        metadata = models.JSONField(blank=True, null=True)
        created_at = models.DateTimeField(auto_now_add=True)
        updated_at = models.DateTimeField(auto_now=True)

        class Meta:
            db_table = "contacts"
            indexes = [
                Index(fields=["email"], name="contacts_email_2eb381_idx"),
                Index(fields=["category"], name="contacts_categor_9bc038_idx"),
                Index(fields=["enrichment_status"], name="contacts_enrichm_d061ef_idx"),
            ]

    return Contact


def create_enrichment_source_model() -> models.Model:
    """Creates the EnrichmentSource model."""

    class EnrichmentSource(models.Model):
        """Represents a source of enrichment data for an entity."""

        id = models.CharField(max_length=26, primary_key=True, serialize=False)
        source_type = models.CharField(max_length=50)
        entity_type = models.CharField(max_length=50)
        entity_id = models.CharField(max_length=26)
        data = models.JSONField()
        confidence = models.FloatField()
        valid_from = models.DateTimeField(auto_now_add=True)
        valid_to = models.DateTimeField(blank=True, null=True)
        created_at = models.DateTimeField(auto_now_add=True)

        class Meta:
            db_table = "enrichment_sources"
            indexes = [
                Index(
                    fields=["entity_type", "entity_id"],
                    name="enrichment__entity__4217af_idx",
                ),
                Index(
                    fields=["source_type", "valid_to"],
                    name="enrichment__source__6a35f9_idx",
                ),
            ]

    return EnrichmentSource


def create_enrichment_task_model() -> models.Model:
    """Creates the EnrichmentTask model."""

    class EnrichmentTask(models.Model):
        """Represents a task to enrich an entity with data."""

        id = models.CharField(max_length=26, primary_key=True, serialize=False)
        entity_type = models.CharField(max_length=50)
        entity_id = models.CharField(max_length=26)
        task_type = models.CharField(max_length=50)
        status = models.CharField(max_length=20, default="pending")
        attempts = models.IntegerField(default=0)
        metadata = models.JSONField(blank=True, null=True)
        result = models.JSONField(blank=True, null=True)
        error_message = models.TextField(blank=True, null=True)
        created_at = models.DateTimeField(auto_now_add=True)
        updated_at = models.DateTimeField(auto_now=True)
        last_attempt = models.DateTimeField(blank=True, null=True)

        class Meta:
            db_table = "enrichment_tasks"
            indexes = [
                Index(
                    fields=["entity_type", "entity_id"],
                    name="enrichment__entity__63ec80_idx",
                ),
                Index(
                    fields=["task_type", "status"],
                    name="enrichment__task_ty_0935f9_idx",
                ),
            ]

    return EnrichmentTask


class Migration(migrations.Migration):
    dependencies: list[tuple[str, str]] = [
        ("email_processing", "0001_initial"),
    ]

    operations: list[Any] = [
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.CharField(max_length=26, primary_key=True, serialize=False),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                ("category", models.CharField(default="individual", max_length=50)),
                (
                    "enrichment_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("metadata", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "contacts",
            },
        ),
        migrations.CreateModel(
            name="EnrichmentSource",
            fields=[
                (
                    "id",
                    models.CharField(max_length=26, primary_key=True, serialize=False),
                ),
                ("source_type", models.CharField(max_length=50)),
                ("entity_type", models.CharField(max_length=50)),
                ("entity_id", models.CharField(max_length=26)),
                ("data", models.JSONField()),
                ("confidence", models.FloatField()),
                ("valid_from", models.DateTimeField(auto_now_add=True)),
                ("valid_to", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "enrichment_sources",
            },
        ),
        migrations.CreateModel(
            name="EnrichmentTask",
            fields=[
                (
                    "id",
                    models.CharField(max_length=26, primary_key=True, serialize=False),
                ),
                ("entity_type", models.CharField(max_length=50)),
                ("entity_id", models.CharField(max_length=26)),
                ("task_type", models.CharField(max_length=50)),
                ("status", models.CharField(default="pending", max_length=20)),
                ("attempts", models.IntegerField(default=0)),
                ("metadata", models.JSONField(blank=True, null=True)),
                ("result", models.JSONField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_attempt", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "enrichment_tasks",
            },
        ),
        migrations.RenameIndex(
            model_name="email",
            new_name="email_proce_message_a3082d_idx",
            old_name="email_proce_message_1234ab_idx",
        ),
        migrations.RenameIndex(
            model_name="email",
            new_name="email_proce_from_em_ef591e_idx",
            old_name="email_proce_from_em_5678cd_idx",
        ),
        migrations.RenameIndex(
            model_name="email",
            new_name="email_proce_receive_862ef2_idx",
            old_name="email_proce_receive_90efgh_idx",
        ),
        migrations.RenameIndex(
            model_name="rawemail",
            new_name="email_proce_process_1b8186_idx",
            old_name="email_proce_process_ijklmn_idx",
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(fields=["email"], name="contacts_email_2eb381_idx"),
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(fields=["category"], name="contacts_categor_9bc038_idx"),
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(
                fields=["enrichment_status"],
                name="contacts_enrichm_d061ef_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="enrichmentsource",
            index=models.Index(
                fields=["entity_type", "entity_id"],
                name="enrichment__entity__4217af_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="enrichmentsource",
            index=models.Index(
                fields=["source_type", "valid_to"],
                name="enrichment__source__6a35f9_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="enrichmenttask",
            index=models.Index(
                fields=["entity_type", "entity_id"],
                name="enrichment__entity__63ec80_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="enrichmenttask",
            index=models.Index(
                fields=["task_type", "status"],
                name="enrichment__task_ty_0935f9_idx",
            ),
        ),
    ]
