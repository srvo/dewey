[project]
name = "dewey"
version = "0.1.0"
description = "Data unification and analysis framework"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "ibis-framework",
    "duckdb",
    "python-dotenv",
    "ruff",
    "pytest",
    "ibis", # Explicit DuckDB backend
    "requests", # For API interactions
    "pyyaml", # Config file handling # Add OpenAI requirement for DeepInfra compatibility
    "openai>=1.0.0",
    "google-generativeai",
]

    "logging",
    "os",
    "argparse",
    "pathlib",
    "typing",
    "ibis",
    "dotenv",
    "functools",
    "itertools",
    "operator",
    "mdurl",
    "collections",
    "re",
    "subprocess",
    "._elffile",
    "requests",
    "datetime",
    "sqlalchemy",
    "api_clients",
    "pyyaml",
    "csv",
    "uvicorn",
    "setuptools",
    "joblib",
    "pandas",
    "click",
    "pytest-mock",
    "pytest-cov",
    "boto3",
    "duckduckgo-search",
    "ratelimit",
    "botocore",
    "duckdb-engine",
    "nextcloud_client",
    "sys",
    "types",
    "ibis-framework[duckdb]",
    "ethifinx",
    "asyncio",
    "dbt-core",
    "logger",
    "json",
    "workflows",
    "engines",
    "loaders",
    "hashlib",
    "time",
    "urllib.parse",
    "package1: relative import from ..analysis.data_processor",
    "package2: relative import from ..core.api_client",
    "relative import from ..core.config",
    "relative import from ..db.data_store",
    "traceback",
    "dataclasses",
    "...engines.deepseek.DeepSeekEngine",
    "...db.models.CompanyAnalysis",
    "...db.models.ResearchResult",
    "...db.session.get_db_session",
    "package1",
    "package2[extra]",
    "..engines.deepseek",
    "research",
    "ethifinx.core.config",
    ".base",
    "contextlib",
    "ethifinx.core.logging_config",
    "ethifinx.research.engines",
    "ethifinx.research.workflows.base",
    "ethifinx.research.workflows.output_handler",
    "aiohttp",
    "duckduckgo_search",
    "httpx",
    "yfinance",
    "abc",
    "...core.llm.LLMClient",
    "pydantic_settings",
    "ethifinx.db",
    "psycopg2",
    "ethifinx.db.data_store",
    "search_flow",
    "api_client",
    "data_store",
    "data_processor",
    "database_reset",
    "sqlite3",
    "..core.config",
    "..core.exceptions",
    "..core.logger",
    ".converters",
    ".models",
    ".data_store",
    "multiprocessing",
    "socket",
    "fastapi",
    "fastapi.middleware.cors",
    "pydantic",
    "pytest_asyncio",
    "ApiClient",
    "ethifinx.core.api_client",
    "ethifinx.db.exceptions",
    "ethifinx.db.models",
    "unittest",
    "unittest.mock",
    "ethifinx[research]",
    "ethifinx.research.search_flow",
    "tempfile",
    "shutil",
    "responses",
    "ethifinx[db]",
    "alembic",
    "structlog",
    "django",
    "email",
    "database",
    "celery",
    "sentry_sdk",
    "pytz",
    "base64",
    "google-auth-httplib2",
    "google-auth-oauthlib",
    "google-api-python-client",
    "google-oauth2",
    "imapclient",
    "email_processing",
    "googleapiclient",
    "redis",
    "python_ulid",
    "pydantic.ai",
    ".contact_enrichment",
    ".contact_merger",
    "syzygy",
    "django.utils",
    "tenacity",
    "database.models",
    "python-dateutil",
    "SQLAlchemy",
    "scripts.db_connector",
    "scripts.gmail_client",
    "scripts.models",
    "pickle",
    "google-auth",
    "tqdm",
    "seaborn",
    "matplotlib",
    "db_connector",
    "scripts.config",
    "scripts.email_operations",
    "scripts.log_config",
    "importlib.util",
    "venv",
    "scripts",
    "streamlit",
    "openai",
    "django_celery_beat",
    "scripts.email_analyzer",
    "typing-extensions",
    "SQLAlchemy",
    "black",
    "flake8",
    "sqlalchemy[postgresql]",
    "google.auth",
    "scripts.code_analyzer",
    ".config",
    "SQLAlchemy",
    ".",
    "uuid",
    "enum",
    "config",
    "autopep8",
    "poetry",
    "SQLAlchemy",
    "psycopg2-binary",
    "scripts.enrich_contacts",
    "scripts.log_analyzer",
    "coverage",
    "aider-chat",
    "random",
    "ulid-py",
    "asgiref",
    "ulid",
    ".models.metrics",
    "..base",
    "..agents.rag",
    "..agents.ghostwriter",
    "..agents.client_advocate",
    "..agents.adversarial",
    "email_processing.prioritization.priority_rules",
    ".chat_history",
    "...models",
    "ast",
    "base",
    "syzygy[base]",
    "asyncpg",
    "..config",